Tato dokumentace by mněla obsahovat vše potebné k mim pytoch projektům
https://www.learnpytorch.io/00_pytorch_fundamentals/

Nejčastjší errory v PyToch a v deeplearnig
    Tensors not right datatype
        Navzájem se soubou můžou pracovat jen tensory se stejným datatypem
    Tensors not right shape
        Špatná velikost tenzoru -> tenzory nejsou stejně velké
    Tensor not on the right device
        Tensory nejsou uloženy na stejném místě. Místa -> CPU, GPU, CUDA

Tensors / listy
    Jedná se o číselné hodnoty v různých formátech.
    V této knihovně se tensory vytváří pomocí příkazu -> torch.tensor()
    Existují 3 základní typy :

    Scalar / Skalár
        Bez žádných dimenzí čistě jedno číslo.
            Bod
        Je potřeba použít metodu .item() abych získali scalar jako normální číslov Pythonu

    Vector / 1D lyst / Vector
        Má jednu dimenzi -> jakoby jeden směr.
            Čára
        Klasický lyst v Pythonu.
        Slkádá se z vícce čísel v hrantých závorkách.
        Např. [1, 2, 3]
    
    Matrix / 2D list
    Má dvě dimenze -> dva různé směry
        čtverec

    Tensor / 3D list
    Má tři dimenze -> má tři různé směry
        Krychle

Datatypy Tensorů
    Jednotlivé tensory můžou mít různé data typy (bolean, float16, float32, ...)
    Jedná se to s jakou přesností se ukládají data tensoru
    float32 = jedno číslo bude zabírat 32 bitu v pamněti.

Získávání dat z tensoru
    Pro získání datatypu ->         tensor.dtype
    Pro získání shape / tvar ->     tensor.shape
    Pro získání device ->           tensor.device


Tvar / Shape
    Tvar určuje jak velký je list a kolik listů je v listu.     
    Prozor záleží na typu listu.
    List = [1, 2, 3]        Shape: (3)          1D, List        List ==     Array ==        Vektor
    List = [[1, 2, 3],      Shape: (2, 3)       2D, Matrix      Python      Programování    Matematika
            [1, 2, 3]]
    List = [[[1, 2, 3],    Shape: (3, 2, 3) = tři listy po dvou listech s třemi hodnotami
                [1, 2, 3]],                     3D, Array
            [[1, 2, 3],
                [1, 2, 3]],
            [[1, 2, 3],
                [1, 2, 3]]]

torch.tensor(X)         X, Y = zvolená hodnota
    Vytvoří tenzor na základě X.
    Pro každý typ tenzoru je nutné zdat X jinak :

    Scalar -> torch.tensor(X) 
    Vector -> torch.tensor([X, Y]) 
    V případě že se jedná o skalar je potřeba použít metodu .item()

torch.rand(X)           X = zvolená hodnota
    Vytvoří tenzor s tvarem X.
    Tento tensor v sobě budemít náhodné hodnoty.

torch.zeros(X)          X = zvolená hodnota
    Vytvoří tenzor o velikosti X pouze s nulami.

torch.arange(X)         X = zvolená hodnota
    Vytvoří řadu čísel. 
    Lze aplikovat tůzné parametry -> torch.arange(start=0, end=1000, step=77)

